<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.science.admin.mapper.ResultMapper">
  <resultMap id="BaseResultMap" type="com.science.admin.pojo.Result">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="dnotice_id" jdbcType="BIGINT" property="dnoticeId" />
    <result column="project_snumber" jdbcType="VARCHAR" property="projectSnumber" />
    <result column="project_title" jdbcType="VARCHAR" property="projectTitle" />
    <result column="cresults" jdbcType="VARCHAR" property="cresults" />
    <result column="audit" jdbcType="VARCHAR" property="audit" />
    <result column="schange" jdbcType="TINYINT" property="schange" />
    <result column="created" jdbcType="TIMESTAMP" property="created" />
    <result column="updated" jdbcType="TIMESTAMP" property="updated" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, user_id, dnotice_id, project_snumber, project_title, cresults, audit, schange, 
    created, updated
  </sql>
  <select id="selectByExample" parameterType="com.science.admin.pojo.ResultExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from result
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from result
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from result
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.science.admin.pojo.ResultExample">
    delete from result
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.science.admin.pojo.Result">
    insert into result (id, user_id, dnotice_id, 
      project_snumber, project_title, cresults, 
      audit, schange, created, 
      updated)
    values (#{id,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{dnoticeId,jdbcType=BIGINT}, 
      #{projectSnumber,jdbcType=VARCHAR}, #{projectTitle,jdbcType=VARCHAR}, #{cresults,jdbcType=VARCHAR}, 
      #{audit,jdbcType=VARCHAR}, #{schange,jdbcType=TINYINT}, #{created,jdbcType=TIMESTAMP}, 
      #{updated,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.science.admin.pojo.Result">
    insert into result
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="dnoticeId != null">
        dnotice_id,
      </if>
      <if test="projectSnumber != null">
        project_snumber,
      </if>
      <if test="projectTitle != null">
        project_title,
      </if>
      <if test="cresults != null">
        cresults,
      </if>
      <if test="audit != null">
        audit,
      </if>
      <if test="schange != null">
        schange,
      </if>
      <if test="created != null">
        created,
      </if>
      <if test="updated != null">
        updated,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="dnoticeId != null">
        #{dnoticeId,jdbcType=BIGINT},
      </if>
      <if test="projectSnumber != null">
        #{projectSnumber,jdbcType=VARCHAR},
      </if>
      <if test="projectTitle != null">
        #{projectTitle,jdbcType=VARCHAR},
      </if>
      <if test="cresults != null">
        #{cresults,jdbcType=VARCHAR},
      </if>
      <if test="audit != null">
        #{audit,jdbcType=VARCHAR},
      </if>
      <if test="schange != null">
        #{schange,jdbcType=TINYINT},
      </if>
      <if test="created != null">
        #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="updated != null">
        #{updated,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.science.admin.pojo.ResultExample" resultType="java.lang.Long">
    select count(*) from result
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update result
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.dnoticeId != null">
        dnotice_id = #{record.dnoticeId,jdbcType=BIGINT},
      </if>
      <if test="record.projectSnumber != null">
        project_snumber = #{record.projectSnumber,jdbcType=VARCHAR},
      </if>
      <if test="record.projectTitle != null">
        project_title = #{record.projectTitle,jdbcType=VARCHAR},
      </if>
      <if test="record.cresults != null">
        cresults = #{record.cresults,jdbcType=VARCHAR},
      </if>
      <if test="record.audit != null">
        audit = #{record.audit,jdbcType=VARCHAR},
      </if>
      <if test="record.schange != null">
        schange = #{record.schange,jdbcType=TINYINT},
      </if>
      <if test="record.created != null">
        created = #{record.created,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updated != null">
        updated = #{record.updated,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update result
    set id = #{record.id,jdbcType=BIGINT},
      user_id = #{record.userId,jdbcType=BIGINT},
      dnotice_id = #{record.dnoticeId,jdbcType=BIGINT},
      project_snumber = #{record.projectSnumber,jdbcType=VARCHAR},
      project_title = #{record.projectTitle,jdbcType=VARCHAR},
      cresults = #{record.cresults,jdbcType=VARCHAR},
      audit = #{record.audit,jdbcType=VARCHAR},
      schange = #{record.schange,jdbcType=TINYINT},
      created = #{record.created,jdbcType=TIMESTAMP},
      updated = #{record.updated,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.science.admin.pojo.Result">
    update result
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="dnoticeId != null">
        dnotice_id = #{dnoticeId,jdbcType=BIGINT},
      </if>
      <if test="projectSnumber != null">
        project_snumber = #{projectSnumber,jdbcType=VARCHAR},
      </if>
      <if test="projectTitle != null">
        project_title = #{projectTitle,jdbcType=VARCHAR},
      </if>
      <if test="cresults != null">
        cresults = #{cresults,jdbcType=VARCHAR},
      </if>
      <if test="audit != null">
        audit = #{audit,jdbcType=VARCHAR},
      </if>
      <if test="schange != null">
        schange = #{schange,jdbcType=TINYINT},
      </if>
      <if test="created != null">
        created = #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="updated != null">
        updated = #{updated,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.science.admin.pojo.Result">
    update result
    set user_id = #{userId,jdbcType=BIGINT},
      dnotice_id = #{dnoticeId,jdbcType=BIGINT},
      project_snumber = #{projectSnumber,jdbcType=VARCHAR},
      project_title = #{projectTitle,jdbcType=VARCHAR},
      cresults = #{cresults,jdbcType=VARCHAR},
      audit = #{audit,jdbcType=VARCHAR},
      schange = #{schange,jdbcType=TINYINT},
      created = #{created,jdbcType=TIMESTAMP},
      updated = #{updated,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>